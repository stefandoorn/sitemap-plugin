name: Build

on:
    push:
        branches-ignore:
            - 'dependabot/**'
    pull_request: ~
    release:
        types: [created]
    schedule:
        -
            cron: "0 1 * * 6" # Run at 1am every Saturday
    workflow_dispatch: ~

jobs:
    tests:
        runs-on: ubuntu-22.04

        name: "Sylius ${{ matrix.sylius }}, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, MySQL ${{ matrix.mysql }}"

        strategy:
            fail-fast: false
            matrix:
                php: ["8.0", "8.1", "8.2"]
                symfony: ["^4.4", "^5.4", "^6.4"]
                sylius: ["~1.11.0", "~1.12.0", "~1.13.0", "~1.14.0"]
                node: ["14.x"]
                mysql: ["8.0"]
                exclude:
                    - symfony: "^6.4"
                      sylius: "~1.11.0"
                    - symfony: "^4.4"
                      sylius: "~1.12.0"
                    - symfony: "^6.4"
                      sylius: "~1.12.0"
                    - symfony: "^4.4"
                      sylius: "~1.13.0"
                    - php: "8.0"
                      sylius: "~1.13.0"

        env:
            APP_ENV: test
            DATABASE_URL: "mysql://root:root@127.0.0.1/sylius?serverVersion=${{ matrix.mysql }}"

        steps:
            -
                uses: actions/checkout@v3

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: symfony
                    coverage: none

            -
                name: Shutdown default MySQL
                run: sudo service mysql stop

            -
                name: Setup MySQL
                uses: mirromutth/mysql-action@v1.1
                with:
                    mysql version: "${{ matrix.mysql }}"
                    mysql root password: "root"

            -
                name: Output PHP version for Symfony CLI
                run: php -v | head -n 1 | awk '{ print $2 }' > .php-version

            -
                name: Install certificates
                run: symfony server:ca:install

            -
                name: Run webserver
                run: (cd tests/Application && symfony server:start --port=8080 --dir=public --daemon)

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -
                name: Cache Composer
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Allow Composer plugins
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true

            -
                name: Restrict Symfony version
                if: matrix.symfony != ''
                run: |
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex:^1.10"
                    composer config extra.symfony.require "${{ matrix.symfony }}"

            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Add security checker
                if: matrix.symfony != '^6.4'
                run: composer require sensiolabs/security-checker:^6.0 --no-update --no-scripts --no-interaction

            -
                name: Install PHP dependencies
                run: composer install --no-interaction

            -
                name: Prepare test application database
                run: |
                    (cd tests/Application && bin/console doctrine:database:create -vvv)
                    (cd tests/Application && bin/console doctrine:migrations:migrate -n -vvv)

            -
                name: Prepare test application cache
                run: (cd tests/Application && bin/console cache:warmup -vvv)

            -
                name: Load fixtures in test application
                run: (cd tests/Application && bin/console sylius:fixtures:load -n)

            -
                name: Validate composer.json
                run: composer validate --ansi --strict

            -
                name: Run security check
                run: symfony security:check

            -
                name: Check coding standard
                run: composer check-style

            -
                name: Run PHPStan
                run: composer analyse || true

            -
                name: Run tests
                run: composer test
